/* Shared CSS components */

/* Panel that typically includes 0+ form elements and one button */
form.panel {
  display: block;
  width: 100%;
  margin: 2rem auto;

  .row {
    clear: both;

    @media screen and (min-width: $mobile-width + 1px) {
      button, input:last-child {
        margin-right: 0;
      }
    }
  }
}

/* Heading icons as images due to inability to do cache invalidation with URLs in CSS */
.h2-icon {
  width: 40px;
  height: 40px;
  margin-top: 20px;
  clear: both;
  display: block;
  margin: 0 auto;
  + h2 {
    margin: 0 0 20px 0;
  }
}

/* Leaderboard navigation */

ul.leader-nav {
  display: block;
  list-style: none;
  margin: 15px auto;
  padding: 0;
  max-width: $narrow-centre-column-width;
  overflow: hidden;

  li {
    background-color: white;
    float: left;
    width: 33%;
    margin-left: 1px;
    font-size: 0.9rem;
    font-weight: bold;
    cursor: pointer;
    padding: 12px;

    a {
      color: black;
    }

    &.selected {
      background-color: $link-color;
      color: white;
      a {
        color: white;
      }
    }

    &:first-child {
      border-top-left-radius: 5px;
      border-bottom-left-radius: 5px;
      margin-left: 0;
    }
    &:last-child {
      border-top-right-radius: 5px;
      border-bottom-right-radius: 5px;
    }
  }
}

/* CSS loader courtesy of http://codepen.io/martinvd/pen/vEQeWR */

.loader {
  width: 48px;
  height: 48px;
  border-radius: 50%;
  transform: perspective( 128px ) rotateX( 30deg );

  .inner {
    position: absolute;
    box-sizing: border-box;
    width: 16px;
    height: 16px;
    background-color: #860000;
    border-radius: 50%;
  }

  .inner.one {
    left: 0%;
    top: 0%;
    animation: loader-move-right 1s ease-out infinite;
  }

  .inner.two {
    right: 0%;
    top: 0%;
    animation: loader-move-down 1s ease-in-out infinite;
  }

  .inner.three {
    right: 0%;
    bottom: 0%;
    animation: loader-move-left 1s ease-in-out infinite;
  }

  .inner.four {
    left: 0%;
    bottom: 0%;
    animation: loader-move-up 1s ease-out infinite;
  }
}

@keyframes loader-move-right {
  0% {
    @include transform(translateX(0));
  }
  100% {
    @include transform(translateX(32px));
  }
}

@keyframes loader-move-down {
  0% {
    @include transform(translateY());
  }
  100% {
    @include transform(translateY(32px));
  }
}

@keyframes loader-move-left {
  0% {
    @include transform(translateX(0));
  }
  100% {
    @include transform(translateX(-32px));
  }
}

@keyframes loader-move-up {
  0% {
    @include transform(translateY(0));
  }
  100% {
    @include transform(translateY(-32px));
  }
}

/* Courtesy of http://codepen.io/marianarlt/pen/aIzvx */
$baseColor: #999;
$hoverColor: #000;
$backColor: #FFF;

// Sizes that work more or less well without heavy distortions (depends on browser):
// 16, 18, 21, 25, 28, 32, 35, 40+
// They look really nice on big sizes, try 50px or 100px
$iconSize: 18px;
$iconBorderWidth: $iconSize / 8;
$iconInnerLines: $iconSize / 8;

// All Icons
.icon {
  height: $iconSize;
  width: $iconSize;
  display: inline-block;
  position: relative;
  vertical-align: middle;
  margin-top: -0.2em;
  @include transition(all 0.3s);
  &:before, &:after {
    content: "";
    position: absolute;
    display: block;
    @include transition(all 0.3s);
  }
  &:hover {
    border-color: $hoverColor;
    cursor: pointer;
    &:before, &:after {
      background: $hoverColor;
    }
  }
}

.icon:hover, p:hover > .icon {
  border-color: $hoverColor;
  cursor: pointer;
  color: $hoverColor;
}

// Add Icon
.add {
  border-radius: $iconSize;
  border: $iconBorderWidth solid $baseColor;
  width: $iconSize;
  height: $iconSize;
  &:before, &:after {
    border-radius: $iconSize;
    background: $baseColor;
    height: $iconInnerLines;
    top: 50%;
    left: 50%;
    margin-left: -$iconSize / 4;
    @if $iconSize == 18px {
      width: $iconSize / 2 - 1;
      margin-top: -$iconInnerLines / 2;
      @-moz-document url-prefix() {
        height: $iconInnerLines - 0.1;
        margin-left: -$iconSize / 4 + 1;
      }
    }
    @else if $iconSize == 16 {
      width: $iconSize / 2;
      margin-top: -$iconInnerLines / 2;
    }
    @else if $iconSize >= 25 and $iconSize <= 27 {
      width: $iconSize / 2;
      margin-top: -$iconInnerLines / 2;
    }
    @else if $iconSize == 32 {
      width: $iconSize / 2;
      margin-top: -$iconInnerLines / 2;
    }
    @else {
      width: $iconSize / 2;
      margin-top: -$iconInnerLines / 2;
    }
  }
  &:after {
    width: $iconInnerLines;
    top: 50%;
    margin-top: -$iconSize / 4;
    left: 50%;
    margin-left: -$iconInnerLines / 2;
    @if $iconSize == 18px {
      height: $iconSize / 2 - 1;
      @-moz-document url-prefix() {
        margin-top: -$iconSize / 4 + 1;
      }
    }
    @else if $iconSize >= 25 and $iconSize <= 27 {
      height: $iconSize / 2;
      margin-left: -$iconInnerLines / 2 + 1;
    }
    @else {
      height: $iconSize / 2;
    }
  }
}

/* Pause Icon */
.pause {
  @extend .add;
  &:before {
    @if $iconSize == 18px {
      height: $iconSize / 2 - 1;
      @-moz-document url-prefix() {
        margin-top: -$iconSize / 4 + 1;
      }
    }
    @else {
      height: $iconSize / 2;
    }
    width: $iconInnerLines;
    margin-top: -$iconSize / 4;
    @if $iconSize == 16px {
      margin-left: -$iconInnerLines / 2 + $iconSize / 9;
    }
    @else {
      margin-left: -$iconInnerLines / 2 + $iconSize / 9;
    }
  }
  &:after {
    margin-left: -$iconInnerLines / 2 - $iconSize / 9;
  }
}

/* Play Icon */
.play {
  @extend .add;
  &:before {
    height: 0;
  }
  &:after {
    border-radius: 0;
    background: transparent;
    border: $iconSize / 4 solid transparent;
    border-width: $iconSize / 4 $iconSize / 4 + $iconInnerLines;
    border-left-color: $baseColor;
    height: 0;
    width: 0;
    left: 50%;
    margin-left: -$iconSize / 8;
    top: 50%;
    @if $iconSize == 18 {
      @-moz-document url-prefix() {
        margin-left: -$iconSize / 8 + 1;
      }
    }
    @else if $iconSize == 21 {
      margin-left: -$iconSize / 8 + 1;
    }
  }
  &:hover:after {
    background: transparent;
    border-color: transparent;
    border-left-color: $hoverColor;
  }
}
